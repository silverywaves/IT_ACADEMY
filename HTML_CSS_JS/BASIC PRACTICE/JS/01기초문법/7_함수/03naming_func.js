/*
    함수는 개체에서 파생된 자료형으로 변수에 할당할 수 있어야 함.
    함수 표현식  : 함수도 변수에 할당할 수 있다는 점을 이용한 정의 방법
    익명 함수   : const 변수명 = function(){};
    네이밍 함수 : const 변수명 = function 식별자(){};

    식별자  : 어떤 값을 식별할 수 있는 고유의 이름
    변수명  : 변수에 붙는 식별자
    함수명  : 함수에 붙는 식별자
*/

// 네이밍 함수
// const gugudan = function gugudan(){
//     for(let i = 1; i <= 9; i++){
//         console.log(`3 * ${i} = ${3 * i}`);
//     }
// };
// gugudan();      // 함수 호출

// 익명 함수
// const gugudan = function(){
//     for(let i = 1; i <= 9; i++){
//         console.log(`3 * ${i} = ${3 * i}`);
//     }
// };
// gugudan();          // 함수 호출 : 할당한 변수명으로 호출하기에 식별자 없어도 문제 없음


const gugudan = function naming(){
    for(let i = 1; i <= 9; i++){
        console.log(`3 * ${i} = ${3 * i}`);
    }
};
naming();              // 함수 호출 : 식별자로 호출한거라 naming 변수가 정의되지 않았다는 참조 오류 발생

/*  함수는 일관된 목적을 가진 코드의 집합이라서 재정의해서도, 재할당해서도 안되는 경우가 많아 const 키워드를 주로 사용
    함수 표현식으로 정의할 때는 네이밍 함수로 정의하는 것이 좋고,  
    식별자를 변수명과 똑같이 만들면 헷갈리지 않아서 좋음  */
