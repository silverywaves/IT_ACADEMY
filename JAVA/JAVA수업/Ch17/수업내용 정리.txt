<컬렉션>
* List (중요)
- 자료를 일렬로 나열하여 저장(객체가 존재하는 주소번지)
- 배열과 유사하지만 데이터 저장시 필요한 만큼 공간 자동 증가
- 중복 허용

* Array List / Linked List
	- Array : 초기용량 10개, 삭제시 뒤인덱스부터 마지막인덱스까지 모두 앞으로 1씩 당겨짐(배열)
	- Linked : 내부 배열형태가 아닌 인접 참조를 링크해서 체인처럼 관리(배열단점 보완)

* vector : 멀티스레드 환경에서 안전하게 객체 추가/삭제 가능


* set
- 저장 순서가 유지되지 않는 형태(index x)의 저장
- 중복 허용 X
- equals 로 동등객체 확인 => equals 만 재정의하지 않고, hashCode 도 함께 재정의 해줘야 함

* iterator - 반복자 : iterator while loop 전체 조회시 사용(예전방식)

* Map (중요)
- key(중복저장x -set 사용) / value (중복저장가능)
- 기존 저장된 키와 동일한 키로 값 저장시 기존값 사라지고 새로운 값 대체(덮어쓰기)
- 검색, 수정, 삭제를 할 때 key 사용 (수정, 삭제시 탐색이 선행되어야함)


* properties
- 키, 값을 String, String 형태로 저장하는 단순화된 컬렉션 클래스
- 애플리케이션의 환경설정과 관련된 속성을 저장하는데 사용 -> 데이터 파이로부터 읽고 쓰는 편리하느 기능 제공


